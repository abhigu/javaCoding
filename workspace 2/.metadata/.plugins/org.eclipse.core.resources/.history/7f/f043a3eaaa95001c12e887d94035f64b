package Viruses;

import java.util.ArrayList;
import java.util.List;

interface moveCondition{
	public boolean condition(Node person);
}

public class Population {
	Node patient0 = new Node(); 
	
	List<Node> notInfected = new ArrayList(); 
	List<Node> infected = new ArrayList(); 
	List<Node> dead = new ArrayList(); 
	
	public Population(int pop) {
		for(int i = 0; i < pop-1; i++) {
			Node node = new Node();
			node.living = true;
			this.notInfected.add(node);
		}
		this.infected.add(patient0);
	}

	public int size() {
		return notInfected.size() + infected.size() + dead.size();
	}
	
	public int sizeDeadandInfected() {
		return infected.size() + dead.size(); 
	}
	
	public void move(List<Node> fromList, List<Node> toList, moveCondition mC) {
		List<Node> temp = new ArrayList(); 
		
		for(int i = 0; i < fromList.size(); i++) {
			Node person = fromList.get(i);
			
			if(mC.condition(person)) {
				temp.add(person);
			}
		}
		
		fromList.removeAll(temp);
		toList.addAll(temp);
	}
	
	//put all "move" methods inside of Population
	//name method "move" and it inputs 2 different lists and outputs the changed lists
	//make the method arbitrary to to work with multiple different population arrays.
}
