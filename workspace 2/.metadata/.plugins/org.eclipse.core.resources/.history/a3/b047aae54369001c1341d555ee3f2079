package Viruses;

public class Simulation {
	
	public Varient firstVarient(Varient varient) {
		varient.rate = 5;
		varient.deathRate = 0.05;
		varient.stability = 0.95;
		varient.incubation = 5;
		return varient;
	}

	public void Epidemic(Varient firstVarient) {
		int day = 1;
		while (true) {
			int newInfected = (int)((Math.pow(firstVarient.rate, day)) * (1 - firstVarient.deathRate));
			int newDead = (Population.infected.size() + (int)(Math.pow(firstVarient.rate, day))) - (int)(Population.infected.size() + (int)(Math.pow(firstVarient.rate, day)) * (1 - firstVarient.deathRate));
			
			for (int i = 0; i < newInfected; i++) {
				Population.infected.add(Population.notInfected.get(i));
			}
			
			day++;
		}
	}
	
	public void printEpdemic() {
		
	}
	
	public static void main(String[] args) {
		
	}
	
}




















/*	
public Varient nextVarient(Varient varient) {
	Varient nextVarient = varient.mutation();
	return nextVarient;
}

public Node[][] createPopulation(int popx, int popy){
	Node[][] population = new Node[popy][popx];
	return population;
}
	
*/	